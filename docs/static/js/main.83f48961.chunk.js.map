{"version":3,"sources":["component/AddCategory.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","component/GifGridItem.jsx","component/GifGrid.jsx","component/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","trim","length","preventDefault","cats","type","name","id","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","map","title","images","downsized_medium","propTypes","PropTypes","object","isRequired","useFecthGifs","loading","state","setState","useEffect","then","imgs","string","GifGridItem","className","src","alt","GifGrid","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kMAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,OAAO,GAAGC,SAVG,SAACC,GACjBJ,EAAWK,OAAOC,OAAS,IAC1BF,EAAEG,iBACFT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,MAMlB,SACE,uBACEQ,KAAK,OACLC,KAAK,GACLC,GAAG,GACHC,MAAOZ,EACPa,YAAY,kBACZC,SArBoB,SAACV,GACzBH,EAAcG,EAAEW,OAAOH,a,+CCNrBI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UACpDH,GAFY,+DAIII,MAAMF,GAJV,cAIRG,EAJQ,gBAKSA,EAAIC,OALb,uBAKNC,EALM,EAKNA,KALM,kBAMPA,EAAKC,KAAI,YAA4B,IAAzBd,EAAwB,EAAxBA,GAAIe,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC5B,MAAO,CACLhB,KACAe,QACAP,IAAG,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBT,SAVpB,2CAAH,sDAebH,EAAQa,UAAY,CAClBZ,SAAUa,IAAUC,OAAOC,YAGdhB,QCfTiB,EAAe,SAAChB,GACpB,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNU,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACRrB,EAAQC,GAAUqB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCZ,KAAMe,EACNL,SAAS,SAEZ,CAACjB,IACGkB,GAGTF,EAAaH,UAAY,CACrBb,SAAUa,IAAUU,OAAOR,YAGhBC,QCRAQ,EAdK,SAAC,GAAoB,IAAlBf,EAAiB,EAAjBA,MAAOP,EAAU,EAAVA,IAC5B,OACE,sBAAKuB,UAAU,6CAAf,UACE,qBAAKC,IAAKxB,EAAKyB,IAAKlB,IACpB,8BAAIA,EAAJ,WCsBSmB,EApBC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SACjB,EAAkCgB,EAAahB,GAAjCU,EAAd,EAAQH,KAAcU,EAAtB,EAAsBA,QACtB,OACE,qCACE,qBAAIQ,UAAU,wCAAd,UAAuDzB,EAAvD,OACCiB,GAAW,mBAAGQ,UAAU,mCAAb,qBACZ,sBAAKA,UAAU,YAAf,UACG,IADH,OAEGf,QAFH,IAEGA,OAFH,EAEGA,EAAQF,KAAI,SAACqB,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAInC,cCOjBoC,EAlBM,WACnB,MAAoChD,mBAAS,CAAC,cAA9C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGkD,EAAWvB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCZxBgC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.83f48961.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    if(inputValue.trim().length > 2) {\r\n        e.preventDefault()\r\n        setCategories(cats => [inputValue, ...cats])\r\n        setInputValue('')\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <form action=\"\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        value={inputValue}\r\n        placeholder=\"Type a category\"\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","import PropTypes from \"prop-types\";\r\nconst getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=gzR0uue7r94zkjTkyhXN6V9JspPS9SCm`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n  return data.map(({ id, title, images }) => {\r\n    return {\r\n      id,\r\n      title,\r\n      url: images?.downsized_medium.url,\r\n    };\r\n  });\r\n};\r\n\r\ngetGifs.propTypes = {\r\n  category: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default getGifs;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFecthGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => setState({\r\n        data: imgs,\r\n        loading: false\r\n    }));\r\n  }, [category]);\r\n  return state; // {data: [], laoding: true}\r\n};\r\n\r\nuseFecthGifs.PropTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default useFecthGifs;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInDown\">\r\n      <img src={url} alt={title} />\r\n      <p>{title} </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGridItem;\r\n","import PropTypes from \"prop-types\";\r\n\r\n//Custom Hook\r\nimport useFecthGifs from \"../hooks/useFetchGifs\";\r\n\r\n//Components\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFecthGifs(category);\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeInDown\">{category} </h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {\" \"}\r\n        {images?.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState } from \"react\";\r\n\r\n//Components\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} ></GifGrid>\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\n\nimport GifExpertApp from './component/GifExpertApp'\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}